╔══════════════════════════════════════════════════════════════╗
║                                                              ║
║     ИНСТРУКЦИЯ ПО ЗАПУСКУ DISCORD BOT + DASHBOARD           ║
║                                                              ║
╚══════════════════════════════════════════════════════════════╝

═══════════════════════════════════════════════════════════════
  БЫСТРЫЙ ЗАПУСК (самый простой способ)
═══════════════════════════════════════════════════════════════

1️⃣  Откройте терминал/командную строку в папке проекта

2️⃣  Выполните команду:

    python start.py

3️⃣  Готово! Скрипт автоматически:
    ✅ Проверит Python и Node.js
    ✅ Создаст виртуальное окружение
    ✅ Установит все зависимости
    ✅ Запустит бота и дашборд

═══════════════════════════════════════════════════════════════
  АЛЬТЕРНАТИВНЫЕ СПОСОБЫ ЗАПУСКА
═══════════════════════════════════════════════════════════════

Windows PowerShell:
    .\start.ps1

Linux/Mac:
    chmod +x start.sh
    ./start.sh

═══════════════════════════════════════════════════════════════
  ВАЖНО! ПЕРЕД ПЕРВЫМ ЗАПУСКОМ
═══════════════════════════════════════════════════════════════

Создайте два .env файла:

1) В корне проекта (.env):
   ─────────────────────────────
   DISCORD_BOT_TOKEN=ваш_токен_бота
   DISCORD_GUILD_ID=ID_вашего_сервера
   DISCORD_PREFIX=!
   SUPABASE_URL=https://ваш-проект.supabase.co
   SUPABASE_KEY=ваш_ключ

2) В папке dashboard (dashboard/.env):
   ─────────────────────────────
   PORT=3000
   DISCORD_BOT_TOKEN=ваш_токен_бота
   SUPABASE_URL=https://ваш-проект.supabase.co
   SUPABASE_KEY=ваш_ключ

Образцы файлов:
- env.example (в корне)
- dashboard/env.example

═══════════════════════════════════════════════════════════════
  ЧТО БУДЕТ ПОСЛЕ ЗАПУСКА
═══════════════════════════════════════════════════════════════

✅ Discord Bot запустится и будет работать в фоне
✅ Dashboard будет доступен по адресу:
   
   👉  http://localhost:3000

✅ В терминале будут выводиться логи с префиксами:
   [BOT]  - логи Discord бота
   [DASH] - логи веб-дашборда

═══════════════════════════════════════════════════════════════
  ОСТАНОВКА СЕРВИСОВ
═══════════════════════════════════════════════════════════════

Просто нажмите Ctrl+C в терминале
Скрипт автоматически остановит все процессы

═══════════════════════════════════════════════════════════════
  ТРЕБОВАНИЯ
═══════════════════════════════════════════════════════════════

Обязательно должны быть установлены:

✅ Python 3.8 или выше
   Скачать: https://www.python.org/downloads/

✅ Node.js 16 или выше
   Скачать: https://nodejs.org/

═══════════════════════════════════════════════════════════════
  РЕШЕНИЕ ПРОБЛЕМ
═══════════════════════════════════════════════════════════════

Проблема: "Python не найден"
Решение:  Установите Python с официального сайта

Проблема: "Node.js не найден"
Решение:  Установите Node.js с официального сайта

Проблема: "DISCORD_BOT_TOKEN must be set"
Решение:  Создайте файл .env с правильным токеном

Проблема: Порт 3000 уже используется
Решение:  Измените PORT в dashboard/.env на 3001

Проблема: Скрипт не запускается
Решение:  Убедитесь что вы в правильной папке проекта

═══════════════════════════════════════════════════════════════
  ФАЙЛЫ ДОКУМЕНТАЦИИ
═══════════════════════════════════════════════════════════════

📄 README.md          - Основная документация (EN)
📄 QUICK_START.md     - Быстрый старт (EN)
📄 ИСПОЛЬЗОВАНИЕ.md   - Полное руководство (RU)
📄 SUMMARY.md         - Сводка по проекту
📄 GITHUB_UPLOAD.md   - Загрузка на GitHub

═══════════════════════════════════════════════════════════════
  СТРУКТУРА ПРОЕКТА
═══════════════════════════════════════════════════════════════

dsbot/
├── start.py              ← 👈 ЗАПУСТИТЕ ЭТОТ ФАЙЛ!
├── start.ps1             (для Windows PowerShell)
├── start.sh              (для Linux/Mac)
├── broadcast_bot.py      (Discord бот)
├── database.py           (БД)
├── requirements.txt      (Python зависимости)
├── .env                  (создайте сами!)
└── dashboard/
    ├── server.js         (Веб-сервер)
    ├── package.json      (Node.js зависимости)
    ├── .env              (создайте сами!)
    └── public/           (HTML, CSS, JS)

═══════════════════════════════════════════════════════════════
  GITHUB РЕПОЗИТОРИЙ
═══════════════════════════════════════════════════════════════

Все файлы загружены на GitHub:
👉 https://github.com/toptopop1802-boop/TimeWeb

═══════════════════════════════════════════════════════════════
  ОСНОВНЫЕ ФУНКЦИИ
═══════════════════════════════════════════════════════════════

Discord Bot:
  • Автоудаление каналов
  • Система тикетов
  • Управление вайпами
  • Турнирные роли
  • Аналитика сервера

Dashboard:
  • Статистика и аналитика
  • Управление сообщениями
  • Хостинг .map файлов
  • Система changelog
  • Управление каналами

═══════════════════════════════════════════════════════════════

Успешной работы! 🚀

Если возникнут вопросы - смотрите файлы документации выше

═══════════════════════════════════════════════════════════════

